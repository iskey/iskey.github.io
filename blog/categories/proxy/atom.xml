<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Proxy | Iskey's Blog]]></title>
  <link href="http://iskey.github.io/blog/categories/proxy/atom.xml" rel="self"/>
  <link href="http://iskey.github.io/"/>
  <updated>2020-07-05T13:10:18+00:00</updated>
  <id>http://iskey.github.io/</id>
  <author>
    <name><![CDATA[Iskey]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Cntlm]]></title>
    <link href="http://iskey.github.io/blog/2020/01/01/cntlm/"/>
    <updated>2020-01-01T08:44:00+00:00</updated>
    <id>http://iskey.github.io/blog/2020/01/01/cntlm</id>
    <content type="html"><![CDATA[<!-- TOC -->


<ul>
<li><a href="#1-%E4%BB%A3%E7%90%86%E7%B1%BB%E5%9E%8B">1. 代理类型</a></li>
<li><a href="#2-%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8">2. 代理服务器</a>

<ul>
<li><a href="#21-%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%BB%E8%A6%81%E5%8A%9F%E8%83%BD">2.1. 代理服务器主要功能</a></li>
<li><a href="#22-%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E7%89%B9%E6%80%A7%E5%88%86%E7%B1%BB">2.2. 代理服务器的特性分类</a>

<ul>
<li><a href="#221-%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8">2.2.1. 正向代理服务器</a></li>
<li><a href="#222-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8">2.2.2. 反向代理服务器</a></li>
<li><a href="#223-%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8">2.2.3. 透明代理服务器</a></li>
</ul>
</li>
<li><a href="#23-%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E7%94%A8%E9%80%94%E5%88%86%E7%B1%BB">2.3. 代理服务器的用途分类</a>

<ul>
<li><a href="#231-http%E4%BB%A3%E7%90%86">2.3.1. Http代理</a></li>
<li><a href="#232-ssl%E4%BB%A3%E7%90%86">2.3.2. SSL代理</a></li>
<li><a href="#233-http-connect%E4%BB%A3%E7%90%86">2.3.3. HTTP CONNECT代理</a></li>
<li><a href="#234-ftp%E4%BB%A3%E7%90%86">2.3.4. FTP代理</a></li>
<li><a href="#235-pop3%E4%BB%A3%E7%90%86">2.3.5. POP3代理</a></li>
<li><a href="#236-telnet%E4%BB%A3%E7%90%86">2.3.6. Telnet代理</a></li>
<li><a href="#237-socks%E4%BB%A3%E7%90%86">2.3.7. Socks代理</a></li>
<li><a href="#238-tunnel%E4%BB%A3%E7%90%86">2.3.8. TUNNEL代理</a></li>
<li><a href="#239-%E6%96%87%E7%8C%AE%E4%BB%A3%E7%90%86">2.3.9. 文献代理</a></li>
<li><a href="#2310-%E6%95%99%E8%82%B2%E7%BD%91%E4%BB%A3%E7%90%86">2.3.10. 教育网代理</a></li>
<li><a href="#2311-%E8%B7%B3%E6%9D%BF%E4%BB%A3%E7%90%86">2.3.11. 跳板代理</a></li>
<li><a href="#2312-ssso%E4%BB%A3%E7%90%86">2.3.12. Ssso代理</a></li>
<li><a href="#2313-flat%E4%BB%A3%E7%90%86">2.3.13. Flat代理</a></li>
<li><a href="#2314-softe%E4%BB%A3%E7%90%86">2.3.14. SoftE代理</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8">3. 常用的代理服务器</a>

<ul>
<li><a href="#31-shadowsocks">3.1. shadowsocks</a></li>
<li><a href="#32-shuttle">3.2. shuttle</a></li>
<li><a href="#33-cntlm">3.3. cntlm</a>

<ul>
<li><a href="#331-cntlm%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE">3.3.1. cntlm安装配置</a></li>
<li><a href="#332-cntlm%E6%9C%8D%E5%8A%A1%E9%87%8D%E5%90%AF">3.3.2. cntlm服务重启</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#4-%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BB%A3%E7%90%86%E5%AE%A2%E6%88%B7%E7%AB%AF">4. 常用的代理客户端</a></li>
<li><a href="#5-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">5. 参考链接</a></li>
</ul>


<!-- /TOC -->


<h1>1. 代理类型</h1>

<h1>2. 代理服务器</h1>

<h2>2.1. 代理服务器主要功能</h2>

<ul>
<li><p>设置用户验证和记帐功能，可按用户进行记帐，没有登记的用户无权通过代理服务器访问Internet网。并对用户的访问时间、访问地点、信息流量进行统计。</p></li>
<li><p>对用户进行分级管理，设置不同用户的访问权限，对外界或内部的Internet地址进行过滤，设置不同的访问权限。</p></li>
<li><p>增加缓冲器(Cache)，提高访问速度，对经常访问的地址创建缓冲区，大大提高热门站点的访问效率。通常代理服务器都设置一个较大的硬盘缓冲区(可能高达几个GB或更大)，当有外界的信息通过时，同时也将其保存到缓冲区中，当其他用户再访问相同的信息时，则直接由缓冲区中取出信息，传给用户，以提高访问速度。</p></li>
<li><p>连接Internet与Internet，充当防火墙(Firewall):因为所有内部网的用户通过代理服务器访问外界时，只映射为一个IP地址，所以外界不能直接访问到内部网；同时可以设置IP地址过滤，限制内部网对外部的访问权限。</p></li>
<li><p>节省IP开销:代理服务器允许使用大量的伪IP地址，节约网上资源，即用代理服务器可以减少对IP地址的需求，对于使用局域网方式接入Internet ，如果为局域网(LAN)内的每一个用户都申请一个IP地址，其费用可想而知。但使用代理服务器后，只需代理服务器上有一个合法的IP地址，LAN内其他用户可以使用10.<em>.</em>.*这样的私有IP地址，这样可以节约大量的IP，降低网络的维护成本。</p></li>
</ul>


<h2>2.2. 代理服务器的特性分类</h2>

<h3>2.2.1. 正向代理服务器</h3>

<p>正向代理服务器位于用户与目标服务器之间，用户通过对代理服务器发送指向目标服务器的请求来获得资源。用户端需要作一些设定才可以使用正向代理服务器，而反向/透明代理服务器是不需要对用户端进行任何设定的。</p>

<h3>2.2.2. 反向代理服务器</h3>

<p>反向代理服务器同样位于用户与目标服务器之间，但对于用户而言，反向代理服务器就相当于目标服务器，即用户直接访问反向代理服务器就可以获得目标服务器的资源。同时，用户不需要知道目标服务器地址，也无需在用户端作任何设定。反向代理服务器通常可用来作Web加速，即使用反向代理作为Web服务器的前置机来降低网络和服务器的负载，提高访问效率。</p>

<h3>2.2.3. 透明代理服务器</h3>

<p>透明代理服务器位于于用户与目标服务器之间.和前两种服务器不同的是，用户即不需要对客户端进行任何设定，也无需知道代理服务器的地址。用户只需要向目标服务器上的资源发起请求即可，然后透明代理服务器会将系统的请求重新定向到代理服务器，然后由代理服务器获得目标资源并返回给用户端。通常，透明代理服务器在局域网中应用。</p>

<h2>2.3. 代理服务器的用途分类</h2>

<h3>2.3.1. Http代理</h3>

<p>代理客户机的http访问，主要代理浏览器访问网页，它的端口一般为80、8080、3128等。</p>

<h3>2.3.2. SSL代理</h3>

<p>支持最高128位加密强度的http代理，可以作为访问加密网站的代理。加密网站是指以<a href="https://%E5%BC%80%E5%A7%8B%E7%9A%84%E7%BD%91%E7%AB%99%E3%80%82ssl%E7%9A%84%E6%A0%87%E5%87%86%E7%AB%AF%E5%8F%A3%E4%B8%BA443%E3%80%82">https://%E5%BC%80%E5%A7%8B%E7%9A%84%E7%BD%91%E7%AB%99%E3%80%82ssl%E7%9A%84%E6%A0%87%E5%87%86%E7%AB%AF%E5%8F%A3%E4%B8%BA443%E3%80%82</a></p>

<h3>2.3.3. HTTP CONNECT代理</h3>

<p>允许用户建立TCP连接到任何端口的代理服务器，这种代理不仅可用于HTTP，还包括FTP、IRC、RM流服务等。</p>

<h3>2.3.4. FTP代理</h3>

<p>代理客户机上的ftp软件访问ftp服务器，其端口一般为21、2121。</p>

<h3>2.3.5. POP3代理</h3>

<p>代理客户机上的邮件软件用pop3方式收邮件，其端口一般为110。</p>

<h3>2.3.6. Telnet代理</h3>

<p>能够代理通信机的telnet，用于远程控制，入侵时经常使用。其端口一般为23。</p>

<h3>2.3.7. Socks代理</h3>

<p>是全能代理，就像有很多跳线的转接板，它只是简单地将一端的系统连接到另外一端。支持多种协议，包括http、ftp请求及其它类型的请求。它分socks 4 和socks 5两种类型，socks 4只支持TCP协议而socks 5支持TCP/UDP协议，还支持各种身份验证机制等协议。其标准端口为1080。</p>

<h3>2.3.8. TUNNEL代理</h3>

<p>经HTTPTunnet程序转换的数据包封装成http请求（Request）来穿透防火墙，允许利用HTTP服务器做任何TCP可以做的事情，功能相当于Socks5。</p>

<h3>2.3.9. 文献代理</h3>

<p>可以用来查询数据库的代理，通过这些代理，可以获得互联网的相关科研学术的数据库资源，例如查询Sciencedirect网站（简称SD）、Academic Press、IEEE，SPRINGER等数据库。</p>

<h3>2.3.10. 教育网代理</h3>

<p>指学术教育机构局域网通过特定的代理服务器可使无出国权限或无访问某IP段权限的计算机访问相关资源。</p>

<h3>2.3.11. 跳板代理</h3>

<p>应用于跳板程序，可以看作一种具有动态加密的特殊socks5代理，，也可直接用于PSD软件。其端口一般为1813。</p>

<h3>2.3.12. Ssso代理</h3>

<p>代理客户机上的ssso程序访问远程网站，具有SSL加密强度的超级代理，支持socks。</p>

<h3>2.3.13. Flat代理</h3>

<p>代理客户机上的flatsurfer程序访问远程网站，具有高强度加密数据流的特殊代理，支持socks，最大可设置三次级联，可以设置穿越代理。其端口一般为6700。</p>

<h3>2.3.14. SoftE代理</h3>

<p>代理客户机上的SoftEther程序访问远程网站，应用虚拟集线器HUB和虚拟网卡技术，具备VPN功能及多种认证方式的代理，符合https协议。</p>

<h1>3. 常用的代理服务器</h1>

<h2>3.1. shadowsocks</h2>

<h2>3.2. shuttle</h2>

<h2>3.3. cntlm</h2>

<p>NTLM是微软开发的http代理鉴权验证协议，只有原生支持NTLMv2鉴权协议的软件才能使用其代理服务，Cntlm是一款C开发的支持NTLM协议鉴权，并作为中间代理服务器，未其它
软件、OS提供代理服务的软件。</p>

<h3>3.3.1. cntlm安装配置</h3>

<p>常用的代理配置如下：</p>

<pre><code>Username    test_user
Domain      test_domain
Password    test_password

Proxy       proxy.xxx.com:8080

NoProxy     127.0.0.1

Listen      3128

Allow       0/0

Deny        0/0
</code></pre>

<p>需要配置鉴权HASH信息，可以通过如下命令获取，</p>

<pre><code>C:\Program Files (x86)\Cntlm&gt;cntlm.exe -M  https://www.baidu.com
      0 [main] cntlm 48032 find_fast_cwd: WARNING: Couldn't compute FAST_CWD pointer.  Please report this problem to
the public mailing list cygwin@cygwin.com
cygwin warning:
  MS-DOS style path detected: C:\Program Files (x86)\Cntlm\cntlm.ini
  Preferred POSIX equivalent is: /Cntlm/cntlm.ini
  CYGWIN environment variable option "nodosfilewarning" turns off this warning.
  Consult the user's guide for more details about POSIX paths:
    http://cygwin.com/cygwin-ug-net/using.html#using-pathnames
Password:
Config profile  1/4... Credentials rejected
Config profile  2/4... OK (HTTP code: 500)
----------------------------[ Profile  1 ]------
Auth            NTLM
PassNT          454D349D302XXXXXXXXXXXXXXXXXXXX9
PassLM          052764B974CXXXXXXXXXXXXXXXXXXXXC
------------------------------------------------
</code></pre>

<p>拷贝如下三行到配置文件
<code>
Auth            NTLM
PassNT          454D349D302XXXXXXXXXXXXXXXXXXXX9
PassLM          052764B974CXXXXXXXXXXXXXXXXXXXXC
</code></p>

<ul>
<li>注意：</li>
</ul>


<p>如果配置cntlm代理，需要把ie浏览器里的局域网代理，也切换到cntlm的本地地址上，如127.0.0.1：:3128</p>

<h3>3.3.2. cntlm服务重启</h3>

<ul>
<li><p>Windows
<code>
net stop cntlm
net start cntlm
</code></p></li>
<li><p>Linux</p></li>
</ul>


<pre><code>apt-get install cntlm
systemclt restart cntlm
</code></pre>

<h1>4. 常用的代理客户端</h1>

<h1>5. 参考链接</h1>

<p><a href="https://blog.csdn.net/ysdaniel/article/details/6999276">https://blog.csdn.net/ysdaniel/article/details/6999276</a></p>
]]></content>
  </entry>
  
</feed>
