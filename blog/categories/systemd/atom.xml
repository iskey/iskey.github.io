<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Systemd | Iskey's Blog]]></title>
  <link href="http://iskey.github.io/blog/categories/systemd/atom.xml" rel="self"/>
  <link href="http://iskey.github.io/"/>
  <updated>2019-07-13T12:41:51+00:00</updated>
  <id>http://iskey.github.io/</id>
  <author>
    <name><![CDATA[Iskey]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Simple Example of Systemd]]></title>
    <link href="http://iskey.github.io/blog/2019/07/07/helloworld-of-systemd/"/>
    <updated>2019-07-07T15:31:20+00:00</updated>
    <id>http://iskey.github.io/blog/2019/07/07/helloworld-of-systemd</id>
    <content type="html"><![CDATA[<h2>init系统.</h2>

<p>linux操作系统首先从BIOS启动开始，接下来进入bootloader（桌面系统现在一般用Grub），bootloader载入内核并进行初始化。内核初始化的最好一步就是启动PID为1的init进程。init进程是以守护进程的方式存在，是所有其他进程的祖先。</p>

<p>init系统的演进路线经历了sysvinit->upstart->systemd。</p>

<h2>systemd系统简介</h2>

<p>借用一下帮助文档里的关系图(man bootup)</p>

<pre><code>       local-fs-pre.target
                |
                v
       (various mounts and   (various swap   (various cryptsetup
        fsck services...)     devices...)        devices...)       (various low-level   (various low-level
                |                  |                  |             services: udevd,     API VFS mounts:
                v                  v                  v             tmpfiles, random     mqueue, configfs,
         local-fs.target      swap.target     cryptsetup.target    seed, sysctl, ...)      debugfs, ...)
                |                  |                  |                    |                    |
                \__________________|_________________ | ___________________|____________________/
                                                     \|/
                                                      v
                                               sysinit.target
                                                      |
                 ____________________________________/|\________________________________________
                /                  |                  |                    |                    \
                |                  |                  |                    |                    |
                v                  v                  |                    v                    v
            (various           (various               |                (various          rescue.service
           timers...)          paths...)              |               sockets...)               |
                |                  |                  |                    |                    v
                v                  v                  |                    v              rescue.target
          timers.target      paths.target             |             sockets.target
                |                  |                  |                    |
                \__________________|_________________ | ___________________/
                                                     \|/
                                                      v
                                                basic.target
                                                      |
                 ____________________________________/|                                 emergency.service
                /                  |                  |                                         |
                |                  |                  |                                         v
                v                  v                  v                                 emergency.target
            display-        (various system    (various system
        manager.service         services           services)
                |             required for            |
                |            graphical UIs)           v
                |                  |           multi-user.target
                |                  |                  |
                \_________________ | _________________/
                                  \|/
                                   v
                         graphical.target
</code></pre>

<h2>systemd 使用</h2>

<ul>
<li>显示某个服务的实时日志</li>
</ul>


<pre><code class="java">journalctl --no-pager -f -u hello.service   
</code></pre>

<ul>
<li>编写服务配置文件</li>
</ul>


<pre><code class="java"># cat /root/hello
NAME=xxxxyyyyzzz
</code></pre>

<ul>
<li>编写服务脚本</li>
</ul>


<pre><code class="java"># cat /usr//local/bin/hello.sh
#!/bin/bash

name=$1
while true
do
    echo Hello World $name
    echo "*" &gt;&gt; /root/hello.log
    sleep 1
done
</code></pre>

<ul>
<li>编写服务的systemd配置文件
可以放到<code>/lib/systemd/system</code>目录，也可以放到<code>/etc/systemd/system</code>目录下，<code>/etc/systemd/system</code>的优先级更高</li>
</ul>


<pre><code class="java">[Unit]
Description=Hello world Service

[Service]
EnvironmentFile=/root/hello
ExecStartPre=-/usr/bin/touch /root/hello.start
ExecStartPre=-/usr/bin/pkill hello.sh
ExecStart=/usr/local/bin/hello.sh ${NAME}
#Type=forking
Restart=on-success
RestartSec=5
</code></pre>

<ul>
<li>设置服务的cgroups参数</li>
</ul>


<pre><code>systemctl set-property hello CPUShares=1600 MemoryLimit=600M --runtime
</code></pre>

<ul>
<li>systemd-run examples</li>
</ul>


<pre><code>systemd-run --user --on-calendar '2017-08-12 14:46' /bin/bash -c 'echo done &gt;/tmp/done'
</code></pre>

<h2>service/socket example</h2>

<ul>
<li>with golang <a href="https://github.com/coreos/go-systemd/tree/v14/examples/activation/httpserver">Httpserver</a></li>
<li>with python <a href="https://gist.github.com/drmalex07/333d8a88c4918954e8e4">Httpserver</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
