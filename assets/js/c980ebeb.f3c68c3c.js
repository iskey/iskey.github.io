"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9797],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>p});var r=n(7294);function _(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){_(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,_=function(e,t){if(null==e)return{};var n,r,_={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(_[n]=e[n]);return _}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(_[n]=e[n])}return _}var i=r.createContext({}),o=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=o(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,_=e.mdxType,s=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=o(n),p=_,d=m["".concat(i,".").concat(p)]||m[p]||c[p]||s;return n?r.createElement(d,a(a({ref:t},u),{},{components:n})):r.createElement(d,a({ref:t},u))}));function p(e,t){var n=arguments,_=t&&t.mdxType;if("string"==typeof e||_){var s=n.length,a=new Array(s);a[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:_,a[1]=l;for(var o=2;o<s;o++)a[o]=n[o];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8994:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>o});var r=n(7462),_=(n(7294),n(3905));const s={title:"\u4e00\u4e2a\u4f7f\u7528Systemd\u7684\u4f8b\u5b50",date:"2019-07-07 15:31:20 +0000",comments:!0,tags:["linux","systemd"]},a="\u4e00\u4e2a\u4f7f\u7528Systemd\u7684\u4f8b\u5b50",l={unversionedId:"Linux/System/\u4e00\u4e2a\u4f7f\u7528Systemd\u7684\u4f8b\u5b50",id:"Linux/System/\u4e00\u4e2a\u4f7f\u7528Systemd\u7684\u4f8b\u5b50",title:"\u4e00\u4e2a\u4f7f\u7528Systemd\u7684\u4f8b\u5b50",description:"init\u7cfb\u7edf.",source:"@site/docs/Linux/System/\u4e00\u4e2a\u4f7f\u7528Systemd\u7684\u4f8b\u5b50.md",sourceDirName:"Linux/System",slug:"/Linux/System/\u4e00\u4e2a\u4f7f\u7528Systemd\u7684\u4f8b\u5b50",permalink:"/Linux/System/\u4e00\u4e2a\u4f7f\u7528Systemd\u7684\u4f8b\u5b50",draft:!1,editUrl:"https://github.com/iskey/iskey.github.io/tree/main/packages/create-docusaurus/templates/shared/docs/Linux/System/\u4e00\u4e2a\u4f7f\u7528Systemd\u7684\u4f8b\u5b50.md",tags:[{label:"linux",permalink:"/tags/linux"},{label:"systemd",permalink:"/tags/systemd"}],version:"current",frontMatter:{title:"\u4e00\u4e2a\u4f7f\u7528Systemd\u7684\u4f8b\u5b50",date:"2019-07-07 15:31:20 +0000",comments:!0,tags:["linux","systemd"]},sidebar:"tutorialSidebar",previous:{title:"\u4e00\u4e2a\u4f7f\u7528RabbitMQ\u7684\u4f8b\u5b50",permalink:"/Linux/System/\u4e00\u4e2a\u4f7f\u7528RabbitMQ\u7684\u4f8b\u5b50"},next:{title:"\u4e00\u4e2a\u4f7f\u7528k8s\u7684\u4f8b\u5b50",permalink:"/Linux/System/\u4e00\u4e2a\u4f7f\u7528k8s\u7684\u4f8b\u5b50"}},i={},o=[{value:"init\u7cfb\u7edf.",id:"init\u7cfb\u7edf",level:2},{value:"systemd\u7cfb\u7edf\u7b80\u4ecb",id:"systemd\u7cfb\u7edf\u7b80\u4ecb",level:2},{value:"systemd \u4f7f\u7528",id:"systemd-\u4f7f\u7528",level:2},{value:"service/socket example",id:"servicesocket-example",level:2}],u={toc:o};function c(e){let{components:t,...n}=e;return(0,_.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,_.kt)("h1",{id:"\u4e00\u4e2a\u4f7f\u7528systemd\u7684\u4f8b\u5b50"},"\u4e00\u4e2a\u4f7f\u7528Systemd\u7684\u4f8b\u5b50"),(0,_.kt)("h2",{id:"init\u7cfb\u7edf"},"init\u7cfb\u7edf."),(0,_.kt)("p",null,"linux\u64cd\u4f5c\u7cfb\u7edf\u9996\u5148\u4eceBIOS\u542f\u52a8\u5f00\u59cb\uff0c\u63a5\u4e0b\u6765\u8fdb\u5165bootloader\uff08\u684c\u9762\u7cfb\u7edf\u73b0\u5728\u4e00\u822c\u7528Grub\uff09\uff0cbootloader\u8f7d\u5165\u5185\u6838\u5e76\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5185\u6838\u521d\u59cb\u5316\u7684\u6700\u597d\u4e00\u6b65\u5c31\u662f\u542f\u52a8PID\u4e3a1\u7684init\u8fdb\u7a0b\u3002init\u8fdb\u7a0b\u662f\u4ee5\u5b88\u62a4\u8fdb\u7a0b\u7684\u65b9\u5f0f\u5b58\u5728\uff0c\u662f\u6240\u6709\u5176\u4ed6\u8fdb\u7a0b\u7684\u7956\u5148\u3002"),(0,_.kt)("p",null,"init\u7cfb\u7edf\u7684\u6f14\u8fdb\u8def\u7ebf\u7ecf\u5386\u4e86sysvinit->upstart->systemd\u3002"),(0,_.kt)("h2",{id:"systemd\u7cfb\u7edf\u7b80\u4ecb"},"systemd\u7cfb\u7edf\u7b80\u4ecb"),(0,_.kt)("p",null,"\u501f\u7528\u4e00\u4e0b\u5e2e\u52a9\u6587\u6863\u91cc\u7684\u5173\u7cfb\u56fe(man bootup)"),(0,_.kt)("pre",null,(0,_.kt)("code",{parentName:"pre"},"       local-fs-pre.target\n                |\n                v\n       (various mounts and   (various swap   (various cryptsetup\n        fsck services...)     devices...)        devices...)       (various low-level   (various low-level\n                |                  |                  |             services: udevd,     API VFS mounts:\n                v                  v                  v             tmpfiles, random     mqueue, configfs,\n         local-fs.target      swap.target     cryptsetup.target    seed, sysctl, ...)      debugfs, ...)\n                |                  |                  |                    |                    |\n                \\__________________|_________________ | ___________________|____________________/\n                                                     \\|/\n                                                      v\n                                               sysinit.target\n                                                      |\n                 ____________________________________/|\\________________________________________\n                /                  |                  |                    |                    \\\n                |                  |                  |                    |                    |\n                v                  v                  |                    v                    v\n            (various           (various               |                (various          rescue.service\n           timers...)          paths...)              |               sockets...)               |\n                |                  |                  |                    |                    v\n                v                  v                  |                    v              rescue.target\n          timers.target      paths.target             |             sockets.target\n                |                  |                  |                    |\n                \\__________________|_________________ | ___________________/\n                                                     \\|/\n                                                      v\n                                                basic.target\n                                                      |\n                 ____________________________________/|                                 emergency.service\n                /                  |                  |                                         |\n                |                  |                  |                                         v\n                v                  v                  v                                 emergency.target\n            display-        (various system    (various system\n        manager.service         services           services)\n                |             required for            |\n                |            graphical UIs)           v\n                |                  |           multi-user.target\n                |                  |                  |\n                \\_________________ | _________________/\n                                  \\|/\n                                   v\n                         graphical.target\n")),(0,_.kt)("h2",{id:"systemd-\u4f7f\u7528"},"systemd \u4f7f\u7528"),(0,_.kt)("ul",null,(0,_.kt)("li",{parentName:"ul"},"\u663e\u793a\u67d0\u4e2a\u670d\u52a1\u7684\u5b9e\u65f6\u65e5\u5fd7")),(0,_.kt)("pre",null,(0,_.kt)("code",{parentName:"pre",className:"language-bash"},"journalctl --no-pager -f -u hello.service   \n")),(0,_.kt)("ul",null,(0,_.kt)("li",{parentName:"ul"},"\u7f16\u5199\u670d\u52a1\u914d\u7f6e\u6587\u4ef6")),(0,_.kt)("pre",null,(0,_.kt)("code",{parentName:"pre",className:"language-bash"},"~ cat /root/hello\nNAME=xxxxyyyyzzz\n")),(0,_.kt)("ul",null,(0,_.kt)("li",{parentName:"ul"},"\u7f16\u5199\u670d\u52a1\u811a\u672c")),(0,_.kt)("pre",null,(0,_.kt)("code",{parentName:"pre",className:"language-bash"},'~ cat /usr//local/bin/hello.sh\n#!/bin/bash\n\nname=$1\nwhile true\ndo\n    echo Hello World $name\n    echo "*" >> /root/hello.log\n    sleep 1\ndone\n')),(0,_.kt)("ul",null,(0,_.kt)("li",{parentName:"ul"},"\u7f16\u5199\u670d\u52a1\u7684systemd\u914d\u7f6e\u6587\u4ef6\n\u53ef\u4ee5\u653e\u5230",(0,_.kt)("inlineCode",{parentName:"li"},"/lib/systemd/system"),"\u76ee\u5f55\uff0c\u4e5f\u53ef\u4ee5\u653e\u5230",(0,_.kt)("inlineCode",{parentName:"li"},"/etc/systemd/system"),"\u76ee\u5f55\u4e0b\uff0c",(0,_.kt)("inlineCode",{parentName:"li"},"/etc/systemd/system"),"\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8")),(0,_.kt)("pre",null,(0,_.kt)("code",{parentName:"pre",className:"language-ini"},"[Unit]\nDescription=Hello world Service\n\n[Service]\nEnvironmentFile=/root/hello\nExecStartPre=-/usr/bin/touch /root/hello.start\nExecStartPre=-/usr/bin/pkill hello.sh\nExecStart=/usr/local/bin/hello.sh ${NAME}\n#Type=forking\nRestart=on-success\nRestartSec=5\n")),(0,_.kt)("ul",null,(0,_.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e\u670d\u52a1\u7684cgroups\u53c2\u6570")),(0,_.kt)("pre",null,(0,_.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl set-property hello CPUShares=1600 MemoryLimit=600M --runtime\n")),(0,_.kt)("ul",null,(0,_.kt)("li",{parentName:"ul"},"systemd-run examples")),(0,_.kt)("pre",null,(0,_.kt)("code",{parentName:"pre",className:"language-bash"},"systemd-run --user --on-calendar '2017-08-12 14:46' /bin/bash -c 'echo done >/tmp/done'\n")),(0,_.kt)("h2",{id:"servicesocket-example"},"service/socket example"),(0,_.kt)("ul",null,(0,_.kt)("li",{parentName:"ul"},"with golang ",(0,_.kt)("a",{parentName:"li",href:"https://github.com/coreos/go-systemd/tree/v14/examples/activation/httpserver"},"Httpserver")," "),(0,_.kt)("li",{parentName:"ul"},"with python ",(0,_.kt)("a",{parentName:"li",href:"https://gist.github.com/drmalex07/333d8a88c4918954e8e4"},"Httpserver"))))}c.isMDXComponent=!0}}]);