"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1596],{3905:(e,n,t)=>{t.d(n,{Zo:()=>f,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},f=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,f=i(e,["components","mdxType","originalType","parentName"]),u=s(t),m=o,h=u["".concat(c,".").concat(m)]||u[m]||p[m]||a;return t?r.createElement(h,l(l({ref:n},f),{},{components:t})):r.createElement(h,l({ref:n},f))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1873:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const a={title:"python\u83b7\u53d6\u5f53\u524d\u884c\u53f7",date:new Date("2015-09-13T23:44:00.000Z"),comments:!0,categories:"python"},l="python\u83b7\u53d6\u5f53\u524d\u884c\u53f7",i={unversionedId:"Linux/Python/python\u83b7\u53d6\u5f53\u524d\u884c\u53f7",id:"Linux/Python/python\u83b7\u53d6\u5f53\u524d\u884c\u53f7",title:"python\u83b7\u53d6\u5f53\u524d\u884c\u53f7",description:"\u5bf9\u4e8epython\uff0c\u8fd9\u51e0\u5929\u4e00\u76f4\u6709\u4e24\u4e2a\u95ee\u9898\u5728\u56f0\u6270\u6211:",source:"@site/docs/Linux/Python/python\u83b7\u53d6\u5f53\u524d\u884c\u53f7.md",sourceDirName:"Linux/Python",slug:"/Linux/Python/python\u83b7\u53d6\u5f53\u524d\u884c\u53f7",permalink:"/Linux/Python/python\u83b7\u53d6\u5f53\u524d\u884c\u53f7",draft:!1,editUrl:"https://github.com/iskey/iskey.github.io/tree/main/packages/create-docusaurus/templates/shared/docs/Linux/Python/python\u83b7\u53d6\u5f53\u524d\u884c\u53f7.md",tags:[],version:"current",frontMatter:{title:"python\u83b7\u53d6\u5f53\u524d\u884c\u53f7",date:"2015-09-13T23:44:00.000Z",comments:!0,categories:"python"},sidebar:"tutorialSidebar",previous:{title:"Makefile\u8c03\u8bd5\u65b9\u6cd5",permalink:"/Linux/Makefile/Makefile\u8c03\u8bd5\u65b9\u6cd5"},next:{title:"Caddy\u670d\u52a1\u5668",permalink:"/Linux/System/Caddy\u670d\u52a1\u5668"}},c={},s=[{value:"logging\u6a21\u5757",id:"logging\u6a21\u5757",level:2}],f={toc:s};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"python\u83b7\u53d6\u5f53\u524d\u884c\u53f7"},"python\u83b7\u53d6\u5f53\u524d\u884c\u53f7"),(0,o.kt)("p",null,"\u5bf9\u4e8epython\uff0c\u8fd9\u51e0\u5929\u4e00\u76f4\u6709\u4e24\u4e2a\u95ee\u9898\u5728\u56f0\u6270\u6211:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"python\u4e2d\u6ca1\u529e\u6cd5\u76f4\u63a5\u53d6\u5f97\u5f53\u524d\u7684\u884c\u53f7\u548c\u51fd\u6570\u540d?"),",\n\u8fd9\u662f\u6709\u4eba\u5728\u8bba\u575b\u91cc\u63d0\u51fa\u7684\u95ee\u9898\uff0c\u5e95\u4e0b\u4e00\u7fa4\u4eba\u53ea\u662f\u5728\u731c\u6d4bpython\u4e3a\u4ec0\u4e48\u4e0d\u50cf",(0,o.kt)("strong",{parentName:"li"},"file"),"\u4e00\u6837\u63d0\u4f9b",(0,o.kt)("strong",{parentName:"li"},"line"),"\u548c",(0,o.kt)("strong",{parentName:"li"},"func"),"\uff0c\u4f46\u662f\u5374\u6700\u7ec8\u4e5f\u6ca1\u6709\u627e\u5230\u89e3\u51b3\u65b9\u6848\u3002"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u5728\u4e0d\u77e5\u9053\u81ea\u5df1\u540d\u5b57\u7684\u60c5\u51b5\u4e0b\uff0c\u600e\u4e48\u624d\u80fd\u9012\u5f52\u8c03\u7528\u81ea\u5df1"),"\u3002\n\u8fd9\u662f\u6211\u4e00\u4e2a\u540c\u4e8b\u95ee\u6211\u7684\uff0c\u5176\u5b9e\u4e5f\u662f\u83b7\u53d6\u51fd\u6570\u540d\uff0c\u4f46\u662f\u5f53\u65f6\u4e5f\u662f\u56de\u7b54\u4e0d\u51fa\u6765\u3002")),(0,o.kt)("h2",{id:"logging\u6a21\u5757"},"logging\u6a21\u5757"),(0,o.kt)("p",null,"\u4e00\u5207\u8fd8\u8981\u4ece\u6211\u7528python\u7684logging\u6a21\u5757\u8bf4\u8d77\uff0clogging\u4e2d\u7684format\u4e2d\u662f\u6709\u5982\u4e0b\u9009\u9879\u7684:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'%(name)s            Name of the logger (logging channel)\n%(levelno)s         Numeric logging level for the message (DEBUG, INFO,\n                    WARNING, ERROR, CRITICAL)\n%(levelname)s       Text logging level for the message ("DEBUG", "INFO",\n                    "WARNING", "ERROR", "CRITICAL")\n%(pathname)s        Full pathname of the source file where the logging\n                    call was issued (if available)\n%(filename)s        Filename portion of pathname\n%(module)s          Module (name portion of filename)\n%(lineno)d          Source line number where the logging call was issued\n                    (if available)\n%(funcName)s        Function name\n%(created)f         Time when the LogRecord was created (time.time()\n                    return value)\n%(asctime)s         Textual time when the LogRecord was created\n%(msecs)d           Millisecond portion of the creation time\n%(relativeCreated)d Time in milliseconds when the LogRecord was created,\n                    relative to the time the logging module was loaded\n                    (typically at application startup time)\n%(thread)d          Thread ID (if available)\n%(threadName)s      Thread name (if available)\n%(process)d         Process ID (if available)\n%(message)s         The result of record.getMessage(), computed just as\n                    the record is emitted\n')),(0,o.kt)("p",null,"\u4e5f\u5c31\u662f\u8bf4\uff0clogging\u662f\u80fd\u591f\u83b7\u53d6\u5230\u8c03\u7528\u8005\u7684\u884c\u53f7\u548c\u51fd\u6570\u540d\u7684\uff0c\u90a3\u4f1a\u4e0d\u4f1a\u4e5f\u53ef\u4ee5\u83b7\u53d6\u5230\u81ea\u5df1\u7684\u884c\u53f7\u548c\u51fd\u6570\u540d\u5462\uff1f\n\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u6e90\u7801\uff0c\u4e3b\u8981\u90e8\u5206\u5982\u4e0b:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def currentframe():\n    """Return the frame object for the caller\'s stack frame."""\n    try:\n        raise Exception\n    except:\n        return sys.exc_info()[2].tb_frame.f_back\ndef findCaller(self):\n    """\n    Find the stack frame of the caller so that we can note the source\n    file name, line number and function name.\n    """\n    f = currentframe()\n    #On some versions of IronPython, currentframe() returns None if\n    #IronPython isn\'t run with -X:Frames.\n    if f is not None:\n        f = f.f_back\n    rv = "(unknown file)", 0, "(unknown function)"\n    while hasattr(f, "f_code"):\n        co = f.f_code\n        filename = os.path.normcase(co.co_filename)\n        if filename == _srcfile:\n            f = f.f_back\n            continue\n        rv = (co.co_filename, f.f_lineno, co.co_name)\n        break\n    return rv\ndef _log(self, level, msg, args, exc_info=None, extra=None):\n    """\n    Low-level logging routine which creates a LogRecord and then calls\n    all the handlers of this logger to handle the record.\n    """\n    if _srcfile:\n        #IronPython doesn\'t track Python frames, so findCaller throws an\n        #exception on some versions of IronPython. We trap it here so that\n        #IronPython can use logging.\n        try:\n            fn, lno, func = self.findCaller()\n        except ValueError:\n            fn, lno, func = "(unknown file)", 0, "(unknown function)"\n    else:\n        fn, lno, func = "(unknown file)", 0, "(unknown function)"\n    if exc_info:\n        if not isinstance(exc_info, tuple):\n            exc_info = sys.exc_info()\n    record = self.makeRecord(self.name, level, fn, lno, msg, args, exc_info, func, extra)\n    self.handle(record)\n')),(0,o.kt)("p",null,"\u6211\u7b80\u5355\u89e3\u91ca\u4e00\u4e0b\uff0c\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7\u5728currentframe\u51fd\u6570\u4e2d\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u7136\u540e\u901a\u8fc7\u5411\u4e0a\u67e5\u627e\u7684\u65b9\u5f0f\uff0c\u627e\u5230\u8c03\u7528\u7684\u4fe1\u606f\u3002\u5176\u4e2d"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"rv = (co.co_filename, f.f_lineno, co.co_name)\n")),(0,o.kt)("p",null,"\u7684\u4e09\u4e2a\u503c\u5206\u522b\u4e3a\u6587\u4ef6\u540d\uff0c\u884c\u53f7\uff0c\u51fd\u6570\u540d\u3002(\u53ef\u4ee5\u53bb",(0,o.kt)("a",{parentName:"p",href:"http://docs.python.org/library/sys.html"},"http://docs.python.org/library/sys.html")," \u6765\u770b\u4e00\u4e0b\u4ee3\u7801\u4e2d\u51e0\u4e2a\u7cfb\u7edf\u51fd\u6570\u7684\u8bf4\u660e)\nOK\uff0c\u5982\u679c\u5df2\u7ecf\u770b\u61c2\u4e86\u6e90\u7801\uff0c\u90a3\u83b7\u53d6\u5f53\u524d\u4f4d\u7f6e\u7684\u884c\u53f7\u548c\u51fd\u6570\u540d\u76f8\u4fe1\u4e5f\u975e\u5e38\u6e05\u695a\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"#!/usr/bin/python\n# -*- coding: utf-8 -*-\n'''\n#=============================================================================\n#  Author:          dantezhu - http://www.vimer.cn\n#  Email:           zny2008@gmail.com\n#  FileName:        xf.py\n#  Description:     \u83b7\u53d6\u5f53\u524d\u4f4d\u7f6e\u7684\u884c\u53f7\u548c\u51fd\u6570\u540d\n#  Version:         1.0\n#  LastChange:      2010-12-17 01:19:19\n#  History:         \n#=============================================================================\n'''\nimport sys\ndef get_cur_info():\n    \"\"\"Return the frame object for the caller's stack frame.\"\"\"\n    try:\n        raise Exception\n    except:\n        f = sys.exc_info()[2].tb_frame.f_back\n    return (f.f_code.co_name, f.f_lineno)\n\ndef callfunc():\n    print get_cur_info()\n\n\nif __name__ == '__main__':\n    callfunc()\n")),(0,o.kt)("p",null,"\u8f93\u51fa\u7ed3\u679c\u662f\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"('callfunc', 24)\n")),(0,o.kt)("p",null,"\u540e\u6765\u53d1\u73b0\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u6709\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5982\u4e0b:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import sys\ndef get_cur_info():\n    print sys._getframe().f_code.co_name\n    print sys._getframe().f_back.f_code.co_name\nget_cur_info()\n")),(0,o.kt)("p",null,"\u8c03\u7528\u7ed3\u679c\u662f:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"get_cur_info\n<module>\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"http://www.vimer.cn/2010/12/%E5%9C%A8python%E4%B8%AD%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E4%BD%8D%E7%BD%AE%E6%89%80%E5%9C%A8%E7%9A%84%E8%A1%8C%E5%8F%B7%E5%92%8C%E5%87%BD%E6%95%B0%E5%90%8D.html"},"\u8f6c\u8f7d\u5730\u5740")))}p.isMDXComponent=!0}}]);