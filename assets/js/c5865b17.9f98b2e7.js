"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7774],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=s(t),f=i,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||l;return t?r.createElement(m,a(a({ref:n},c),{},{components:t})):r.createElement(m,a({ref:n},c))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,a=new Array(l);a[0]=p;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var s=2;s<l;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},7979:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=t(7462),i=(t(7294),t(3905));const l={date:new Date("2017-03-02T21:42:00.000Z"),title:"\u4e00\u4e2anetfilter\u9a71\u52a8\u7684\u4f8b\u5b50",tags:["kernel","netfilter"]},a="\u4e00\u4e2anetfilter\u9a71\u52a8\u7684\u4f8b\u5b50",o={unversionedId:"Linux/Kernal/\u4e00\u4e2anetfilter\u9a71\u52a8\u7684\u4f8b\u5b50",id:"Linux/Kernal/\u4e00\u4e2anetfilter\u9a71\u52a8\u7684\u4f8b\u5b50",title:"\u4e00\u4e2anetfilter\u9a71\u52a8\u7684\u4f8b\u5b50",description:"netfilter\u4f8b\u5b50",source:"@site/docs/Linux/Kernal/\u4e00\u4e2anetfilter\u9a71\u52a8\u7684\u4f8b\u5b50.md",sourceDirName:"Linux/Kernal",slug:"/Linux/Kernal/\u4e00\u4e2anetfilter\u9a71\u52a8\u7684\u4f8b\u5b50",permalink:"/Linux/Kernal/\u4e00\u4e2anetfilter\u9a71\u52a8\u7684\u4f8b\u5b50",draft:!1,editUrl:"https://github.com/iskey/iskey.github.io/tree/main/docs/Linux/Kernal/\u4e00\u4e2anetfilter\u9a71\u52a8\u7684\u4f8b\u5b50.md",tags:[{label:"kernel",permalink:"/tags/kernel"},{label:"netfilter",permalink:"/tags/netfilter"}],version:"current",lastUpdatedAt:1706606093,formattedLastUpdatedAt:"Jan 30, 2024",frontMatter:{date:"2017-03-02T21:42:00.000Z",title:"\u4e00\u4e2anetfilter\u9a71\u52a8\u7684\u4f8b\u5b50",tags:["kernel","netfilter"]},sidebar:"tutorialSidebar",previous:{title:"user mode linux",permalink:"/Linux/Kernal/user mode linux"},next:{title:"Makefile\u5e38\u7528\u51fd\u6570",permalink:"/Linux/Makefile/Makefile\u5e38\u7528\u51fd\u6570"}},u={},s=[{value:"netfilter\u4f8b\u5b50",id:"netfilter\u4f8b\u5b50",level:2}],c={toc:s};function d(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u4e00\u4e2anetfilter\u9a71\u52a8\u7684\u4f8b\u5b50"},"\u4e00\u4e2anetfilter\u9a71\u52a8\u7684\u4f8b\u5b50"),(0,i.kt)("h2",{id:"netfilter\u4f8b\u5b50"},"netfilter\u4f8b\u5b50"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'#include <linux/module.h>\n#include <linux/kernel.h>\n#include <linux/init.h>\n#include <linux/types.h>\n#include <linux/netdevice.h>\n#include <linux/skbuff.h>\n#include <linux/netfilter_ipv4.h>\n#include <linux/inet.h>\n#include <linux/in.h>\n#include <linux/ip.h>\n\nMODULE_LICENSE("GPL");\n#define NIPQUAD(addr) \\\n  ((unsigned char *)&addr)[0], \\\n  ((unsigned char *)&addr)[1], \\\n  ((unsigned char *)&addr)[2], \\\n  ((unsigned char *)&addr)[3]\n\nstatic unsigned int sample(\nunsigned int hooknum,\nstruct sk_buff * skb,\nconst struct net_device *in,\nconst struct net_device *out,\nint (*okfn) (struct sk_buff *))\n{\n    __be32 sip,dip;\n if(skb){\n   struct sk_buff *sb = NULL;\n   sb = skb;\n   struct iphdr *iph;\n   iph  = ip_hdr(sb);\n   sip = iph->saddr;\n   dip = iph->daddr;\n   printk("Packet for source address: %d.%d.%d.%d\\n destination address: %d.%d.%d.%d\\n ", NIPQUAD(sip), NIPQUAD(dip));\n    }\n return NF_ACCEPT;\n}\n\n struct nf_hook_ops sample_ops = {\n   .list =  {NULL,NULL},\n   .hook = sample,\n   .pf = PF_INET,\n   .hooknum = NF_INET_PRE_ROUTING,\n   .priority = NF_IP_PRI_FILTER+2\n };\n\nstatic int __init sample_init(void) {\n  nf_register_hook(&sample_ops);\n  return 0;\n}\n\n\nstatic void __exit sample_exit(void) {\n  nf_unregister_hook(&sample_ops);\n}\n\n module_init(sample_init);\n module_exit(sample_exit);\n MODULE_AUTHOR("chenkangrui");\n MODULE_DESCRIPTION("sample");  \n \n')))}d.isMDXComponent=!0}}]);