"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9359],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>v});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=c(t),v=o,m=d["".concat(p,".").concat(v)]||d[v]||f[v]||i;return t?r.createElement(m,s(s({ref:n},l),{},{components:t})):r.createElement(m,s({ref:n},l))}));function v(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,s=new Array(i);s[0]=d;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var c=2;c<i;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2257:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var r=t(7462),o=(t(7294),t(3905));const i={date:new Date("2015-10-06T01:49:12.000Z"),title:"SVN\u6e90\u7801\u6811\u5feb\u7167\u751f\u6210\u5de5\u5177",categories:"\u5de5\u5177",tags:["svn"]},s="SVN\u6e90\u7801\u6811\u5feb\u7167\u751f\u6210\u5de5\u5177",a={unversionedId:"Linux/Tools/svn\u6e90\u7801\u6811\u5feb\u7167\u751f\u6210\u5de5\u5177",id:"Linux/Tools/svn\u6e90\u7801\u6811\u5feb\u7167\u751f\u6210\u5de5\u5177",title:"SVN\u6e90\u7801\u6811\u5feb\u7167\u751f\u6210\u5de5\u5177",description:"\u9879\u76ee\u7684\u6e90\u7801\u7ba1\u7406\u5de5\u5177\u4f7f\u7528\u7684\u662fSVN\uff0c\u7531\u4e8e\u6d89\u53ca\u7684\u9879\u76ee\u7ec4\u4f17\u591a\uff0c\u6e90\u7801\u5e93\u529f\u80fd\u6a21\u5757\u5206\u6563\u5728\u4f17\u591a\u5c0f\u7684\u6e90\u7801\u5e93\u4e2d\uff0c\u6700\u7ec8\u7684\u9879\u76ee\u6e90\u7801\u53d1\u5e03\u9700\u8981\u4ece\u5404\u4e2a\u6e90\u7801\u5e93\u4e2d\u6293\u53d6\u5206\u652f\uff0c\u7136\u540e\u7248\u672c\u53d1\u5e03\u3002",source:"@site/docs/Linux/Tools/svn\u6e90\u7801\u6811\u5feb\u7167\u751f\u6210\u5de5\u5177.md",sourceDirName:"Linux/Tools",slug:"/Linux/Tools/svn\u6e90\u7801\u6811\u5feb\u7167\u751f\u6210\u5de5\u5177",permalink:"/Linux/Tools/svn\u6e90\u7801\u6811\u5feb\u7167\u751f\u6210\u5de5\u5177",draft:!1,editUrl:"https://github.com/iskey/docusaurus-2/tree/main/packages/create-docusaurus/templates/shared/docs/Linux/Tools/svn\u6e90\u7801\u6811\u5feb\u7167\u751f\u6210\u5de5\u5177.md",tags:[{label:"svn",permalink:"/tags/svn"}],version:"current",frontMatter:{date:"2015-10-06T01:49:12.000Z",title:"SVN\u6e90\u7801\u6811\u5feb\u7167\u751f\u6210\u5de5\u5177",categories:"\u5de5\u5177",tags:["svn"]},sidebar:"tutorialSidebar",previous:{title:"perf for python",permalink:"/Linux/Tools/perf for python"},next:{title:"Vim\u4e2d\u65ad\u96f6\u5bbd\u65ad\u8a00-\u6b63\u5219\u73af\u89c6",permalink:"/Linux/Tools/vim\u4e2d\u65ad\u96f6\u5bbd\u65ad\u8a00-\u6b63\u5219\u73af\u89c6"}},p={},c=[{value:"SVN\u5feb\u7167\u5de5\u5177",id:"svn\u5feb\u7167\u5de5\u5177",level:2}],l={toc:c};function f(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"svn\u6e90\u7801\u6811\u5feb\u7167\u751f\u6210\u5de5\u5177"},"SVN\u6e90\u7801\u6811\u5feb\u7167\u751f\u6210\u5de5\u5177"),(0,o.kt)("p",null,"\u9879\u76ee\u7684\u6e90\u7801\u7ba1\u7406\u5de5\u5177\u4f7f\u7528\u7684\u662fSVN\uff0c\u7531\u4e8e\u6d89\u53ca\u7684\u9879\u76ee\u7ec4\u4f17\u591a\uff0c\u6e90\u7801\u5e93\u529f\u80fd\u6a21\u5757\u5206\u6563\u5728\u4f17\u591a\u5c0f\u7684\u6e90\u7801\u5e93\u4e2d\uff0c\u6700\u7ec8\u7684\u9879\u76ee\u6e90\u7801\u53d1\u5e03\u9700\u8981\u4ece\u5404\u4e2a\u6e90\u7801\u5e93\u4e2d\u6293\u53d6\u5206\u652f\uff0c\u7136\u540e\u7248\u672c\u53d1\u5e03\u3002"),(0,o.kt)("p",null,"\u8fd9\u5c31\u7ed9\u7248\u672c\u7ba1\u7406\u5458\u5e26\u6765\u4e86\u9ebb\u70e6\uff0c\u53d1\u5e03\u7248\u672c\u7684\u65f6\u5019\uff0c\u9700\u8981\u4ece\u5404\u4e2a\u6e90\u7801\u5e93\u6293\u53d6\u6e90\u7801\uff0c\u7136\u540e\u8fdb\u884c\u7f16\u8bd1\uff0c\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u95ee\u9898\uff0c\u5c31\u5728\u9700\u8981\u66f4\u65b0\u51fa\u95ee\u9898\u7684\u6e90\u7801\u5206\u652f\uff0c\u751a\u81f3\u6709\u53ef\u80fd\u4f1a\u4e34\u65f6\u7684\u4fee\u6539\u6e90\u7801\u4e2d\u7684\u67d0\u4e00\u4e9b\u6587\u4ef6\u3002"),(0,o.kt)("p",null,"\u5f00\u53d1\u4eba\u5458\u5982\u679c\u60f3\u8981\u4f7f\u7528\u67d0\u4e00\u4e2a\u7248\u672c\u7684\u6e90\u7801\uff0c\u4e00\u822c\u628a\u7248\u672c\u7ba1\u7406\u5458\u53d1\u5e03\u7684\u6e90\u7801\u5305\u4e0b\u8f7d\u4e0b\u6765\uff0c\u7136\u540e\u5728\u8fdb\u884cBug\u5b9a\u4f4d\u548c\u8ddf\u8e2a\uff0c\u7531\u4e8e\u6e90\u7801\u91cf\u6bd4\u8f83\u5927\uff0c\u6240\u4ee5\u9020\u6210\u4e86\u5f88\u5927\u7684\u4e0d\u65b9\u4fbf\u3002"),(0,o.kt)("h2",{id:"svn\u5feb\u7167\u5de5\u5177"},"SVN\u5feb\u7167\u5de5\u5177"),(0,o.kt)("p",null,"\u6240\u4ee5\u7f16\u5199\u4e86\u4e0b\u8fb9\u7684\u6e90\u7801\u5feb\u7167\u5de5\u5177\uff0c\u6709\u4ee5\u4e0b\u529f\u80fd\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u904d\u5386\u6240\u6709\u7684\u6e90\u7801\u5e93\uff0c\u83b7\u53d6\u5e76\u8bb0\u5f55\u6240\u6709\u7684\u6e90\u7801\u5e93\u5f53\u524d\u7248\u672c\u53f7"),(0,o.kt)("li",{parentName:"ul"},"\u8bb0\u5f55\u5f53\u524d\u6e90\u7801\u5e93\u4e2d\uff0c\u65b0\u4fee\u6539\u63d0\u4ea4\u7684\u6587\u4ef6\u7248\u672c\u53f7\u3002\uff08svn \u53ea\u66f4\u65b0\u63d0\u4ea4\u4e86\u7684\u4e2a\u522b\u6587\u4ef6\uff09"),(0,o.kt)("li",{parentName:"ul"},"\u8bb0\u5f55\u5f53\u524d\u4e34\u65f6\u4fee\u6539\uff0c\u4f46\u6ca1\u6709\u63d0\u4ea4\u7684\u4ee3\u7801\uff0c\u5e76\u751f\u6210patch\u6587\u4ef6\u653e\u5230patches/\u76ee\u5f55\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u65e0\u6cd5\u751f\u6210patch\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5219\u62f7\u8d1d\u5230patches/\u76ee\u5f55\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u751f\u6210snapshot.sh\u811a\u672c\uff0c\u8fd9\u4e2a\u811a\u672c\u5305\u542b\u4e86\u5f53\u524dsvn\u6e90\u7801\u6811\u7684\u5feb\u7167\u4fe1\u606f\u3002")),(0,o.kt)("p",null,"\u5728\u4efb\u610f\u7684\u9879\u76eeSVN\u6e90\u7801\u6811\uff0c\u628a\u524d\u8fb9\u8f93\u51fa\u7684snapshot.sh\u548cpatches/\u76ee\u5f55\u653e\u5230\u8fd9\u4e2a\u6e90\u7801\u6811\u7684\u6839\u76ee\u5f55\uff0c\u6267\u884csnapshot.\u5c31\u53ef\u4ee5\u6062\u590d\u5230\u76f8\u5e94\u7684\u5feb\u7167\u72b6\u6001\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'#/bin/sh\n\n### exec this scripts in root directory.\n### the snapshot of the work copy will be saved to $OUT.\n\nOUT=$(pwd)/snapshot.sh\nPATCH_DIR=$(pwd)/patches\nEAT=$(pwd)/eat\npatch_idx=0\nmime_file_idx=0\n\necho "### V3.02.20 svn snapshot scripts ###" >$OUT\necho "PATCH_DIR=\\$(pwd)/patches" >>$OUT\n\necho -e "\\ncheck_svn_tree()\n{\nf_temp=\\$1\nf_temp=\\${f_temp%/*}\nif ! test -d \\$f_temp\nthen\n    while( ! test -d  \\${f_temp%/*})\n    do\n        f_last=\\$f_temp\n        f_temp=\\${f_temp%/*}\n        if [ \\"\\$f_last\\" = \\"\\$f_temp\\" ]\n        then\n            break\n        fi\n    done\n    echo \\"will update \\$f_temp\\"\n    svn update \\$f_temp\nfi\n}\\n" >>$OUT\n\n#Prepare eat program for svn diff.\ntouch $EAT\nchmod a+x $EAT\n\nrm $PATCH_DIR -fr\nmkdir -p $PATCH_DIR\n\n#Find svn repositories.\n#svn_repos=$(find ./ -name \'*.svn\' -type d -print)\nsvn_repos="./ "\nsvn_repos+=$(svn status | grep ^Perf | cut -d\\\' -f 2)\nfor svn_repo in $svn_repos\ndo\n    #svn_dir=${svn_repo%/*}\n    svn_dir=$svn_repo\n    cd $svn_dir\n    #Get svn local copy\'s revision.\n    REV=$(svn info . | sed -n \'/Revision:/p\' | awk \'{print $2}\')\n    echo "cd $svn_dir"\n    echo "cd $svn_dir" >>$OUT\n    echo "echo Cleaning: $svn_dir" >>$OUT\n    echo "svn st | grep \'^?\' | awk \'{print $2}\' | xargs -I{} rm -rf \'{}\'" >>$OUT\n    echo "svn st --no-ignore | grep \'^I\' | awk \'{print $2}\' | xargs -I{} rm -rf \'{}\'" >>$OUT\n    echo "echo Reverting: $svn_dir" >>$OUT\n    echo "svn cleanup" >>$OUT\n    echo "svn revert . -R" >>$OUT\n    echo "svn update . -r $REV" >>$OUT\n    echo "svn revert . -R" >>$OUT\n    \n    #Get svn local copy\'s changed files.\n    M_LIST=$(svn diff -r BASE:COMMITTED --diff-cmd $EAT | sed -n \'/Index:/p\' | awk \'{print $2}\')\n    for svn_file in $M_LIST\n    do\n        echo "  Changed File: "$svn_file\n        #Get changed file\'s revision.\n        file_rev=$(svn info $svn_file | sed -n \'/Last Changed Rev:/p\' | awk \'{print $4}\')\n        echo "#----------" >>$OUT\n        echo "svn revert $svn_file >/dev/null 2>&1" >>$OUT\n        echo "check_svn_tree $svn_file" >>$OUT\n        echo "svn update -r $file_rev $svn_file" >>$OUT\n        echo "svn revert $svn_file" >>$OUT\n    done\n    \n    #Clean again after revert.\n    echo "svn st | grep \'^?\' | awk \'{print $2}\' | xargs -I{} rm -rf \'{}\'" >>$OUT\n    echo "svn st --no-ignore | grep \'^I\' | awk \'{print $2}\' | xargs -I{} rm -rf \'{}\'" >>$OUT\n    \n    #Get temporary patches\n    PATCH_FILES=$(svn diff . --diff-cmd $EAT | sed -n \'/Index:/p\' | awk \'{print $2}\')\n    if [ ""x != "$PATCH_FILES"x ];then\n        let patch_idx+=1\n        echo "#==========" >>$OUT\n        svn diff . >$PATCH_DIR/$patch_idx.patch\n        echo "patch -p0 <\\$PATCH_DIR/$patch_idx.patch" >>$OUT\n    fi\n    \n    for mime_file in $PATCH_FILES\n    do\n        mime_type=$(svn pl $mime_file | sed -n \'/svn:mime-type/p\')\n        if [ ""x != "$mime_type"x ];then\n            let mime_file_idx+=1\n            cp $mime_file $PATCH_DIR/${mime_file_idx}_${mime_file##*/} -fr\n            echo "#==========" >>$OUT\n            echo "cp \\$PATCH_DIR/${mime_file_idx}_${mime_file##*/} $mime_file -f" >>$OUT\n        fi\n    done\n    \n    echo "cd ->/dev/null" >> $OUT\n    echo "" >>$OUT\n    echo "###############">> $OUT\n    echo "" >>$OUT\n    cd - > /dev/null\ndone\n')))}f.isMDXComponent=!0}}]);